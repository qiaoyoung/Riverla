name: iOS Native Build

on:
  push:
    branches:
      - main  # 当推送到 'main' 分支时触发工作流

jobs:
  build-ios:
    runs-on: macos-latest

    steps:
    # 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 清除 Xcode 缓存
    - name: Clean Xcode Cache
      run: |
        rm -rf ~/Library/Developer/Xcode/DerivedData
        rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
        rm -rf ~/Library/Developer/Xcode/Archives
        rm -rf ~/Library/Developer/Xcode/Products
    
    # 选择 Xcode 版本
    - name: Select Xcode 16.2
      run: sudo xcode-select -s /Applications/Xcode_16.2.app
      
    # 设置 CocoaPods
    - name: Setup CocoaPods
      run: |
        echo "开始安装 CocoaPods 依赖..."
        pod install

    # 打印环境信息
    - name: Print Environment Info
      run: |
        echo "============= Environment Variables ============="
        echo "Current Directory: $(pwd)"
        echo "Xcode Version:"
        xcodebuild -version
        echo "============= 查找项目文件 ============="
        ls -la *.xcworkspace 2>/dev/null || echo "未找到 .xcworkspace 文件"
        ls -la *.xcodeproj 2>/dev/null || echo "未找到 .xcodeproj 文件"
        echo "============= Available Schemes ============="
        WORKSPACE_FILE=$(find . -name "*.xcworkspace" -maxdepth 1 | head -n 1)
        if [ -n "$WORKSPACE_FILE" ]; then
          echo "使用 workspace: $WORKSPACE_FILE"
          xcodebuild -workspace "$WORKSPACE_FILE" -list
        else
          echo "错误：未找到 .xcworkspace 文件"
          exit 1
        fi
 
    # 安装证书步骤
    - name: Install Certificate
      env:
        BUILD_CERTIFICATE_BASE64: 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

        P12_PASSWORD: 111111
        KEYCHAIN_PASSWORD: 111111
      run: |
        echo "$BUILD_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security set-keychain-settings -t 3600 -u build.keychain
        security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        rm certificate.p12

    # 安装描述文件步骤
    - name: Install Provisioning Profile
      env:
        PROVISIONING_PROFILE_BASE64: 
        
      run: |
        echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > provisioning.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp provisioning.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        rm provisioning.mobileprovision

    # 检查 ExportOptions.plist 文件
    - name: Check ExportOptions.plist
      run: |
        if [ -f "ExportOptions.plist" ]; then
          echo "找到 ExportOptions.plist 文件"
          cat ExportOptions.plist
        else
          echo "错误：未找到 ExportOptions.plist 文件"
          exit 1
        fi

    # 构建和归档 iOS 应用
    - name: Build and Archive iOS App
      run: |
        # 创建构建目录
        mkdir -p build
        
        # 查找 workspace 文件
        WORKSPACE_FILE=$(find . -name "*.xcworkspace" -maxdepth 1 | head -n 1)
        if [ -z "$WORKSPACE_FILE" ]; then
          echo "错误：未找到 .xcworkspace 文件"
          echo "当前目录内容："
          ls -la
          exit 1
        fi
        
        echo "使用 workspace: $WORKSPACE_FILE"
        echo "使用 scheme: Riverla"
        
        # 构建和归档
        xcodebuild -workspace "$WORKSPACE_FILE" \
          -scheme "Riverla" \
          -configuration "Release" \
          -destination 'generic/platform=iOS' \
          -archivePath "$PWD/build/App.xcarchive" \
          archive \
          -allowProvisioningUpdates

    # 导出 IPA
    - name: Export IPA
      run: |
        xcodebuild -exportArchive \
          -archivePath "$PWD/build/App.xcarchive" \
          -exportOptionsPlist ExportOptions.plist \
          -exportPath "$PWD/build/ipa"

    # 检查构建结果
    - name: Check Build Files
      run: |
        ls -la build/ipa/

    # 上传 IPA 作为 artifact
    - name: Archive IPA
      uses: actions/upload-artifact@v4
      with:
        name: release-ipa
        path: build/ipa/*.ipa

    # 上传到 App Store
    - name: Upload to App Store using altool
      if: github.ref == 'refs/heads/main'  # 只在 main 分支上传
      env:
        APPLE_ID: "marianebautista76@outlook.com"
        APP_SPECIFIC_PASSWORD: "azqi-stfd-bkkl-sqfv"
      run: |
        # 查找生成的 IPA 文件
        IPA_FILE=$(find build/ipa -name "*.ipa" | head -n 1)
        if [ -z "$IPA_FILE" ]; then
          echo "错误：未找到 IPA 文件"
          exit 1
        fi
        
        echo "上传 IPA 文件: $IPA_FILE"
        xcrun altool --upload-app -f "$IPA_FILE" \
          -t ios \
          -u "$APPLE_ID" \
          -p "$APP_SPECIFIC_PASSWORD" \
          --verbose

    # 清理
    - name: Cleanup
      if: always()
      run: |
        # 删除临时 keychain
        security delete-keychain build.keychain || true 
